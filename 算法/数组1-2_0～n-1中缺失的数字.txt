一个长度为n-1的递增排序数组中的所有数字都是唯一的，并且每个数字都在范围0～n-1之内。在范围0～n-1内的n个数字中有且只有一个数字不在该数组中，请找出这个数字。

 

示例 1:

输入: [0,1,3]
输出: 2
示例 2:

输入: [0,1,2,3,4,5,6,7,9]
输出: 8
 

限制：

1 <= 数组长度 <= 10000

来源：力扣（LeetCode）

### 解题思路
先吐槽一下题意，我愣是读了几遍才读懂，看起来真别扭。长度为n-1，我只想说 啊这？
递增，唯一。
数组长度也不大，直接遍历即可。不过应该不至于考遍历，所以就是考一个查找算法。根据上述条件，我们选择二分法。
看 a[i]==i,如果等于，则说明前面都是没问题的，如果不等于，则说明前面有突变，然后分分分即可。

### 代码

```cpp
class Solution {
public:
    int missingNumber(vector<int>& nums) {
            int n = nums.size();
            int l = 0, r = n-1;
            while(r>l+1){
                if(nums[(r+l)/2] == (r+l)/2)
                    l = (r+l)/2;
                else
                    r = (r+l)/2;
            }
            if(nums[r] == r)
            return r+1;
            else if(nums[l] == l)
            return l+1;
            else
            return l;


    }
};
```